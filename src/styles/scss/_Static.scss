/* STATIC CLASSES */


//LAYOUT

//aspect ratio

$list__aspectRatio: (
	'square': 1/1,
	'portrait': 3/4,
	'landscape': 4/3,
	'widescreen': 16/9,
	'vertical': 9/16,
	'ultrawide': 21/9,
);

@each $key, $value in $list__aspectRatio {
	.aspect__#{$key} {
		aspect-ratio: $value;
	}
}

//columns

$list__columnsCount: (1, 2, 3, 4, 5);

@each $column in $list__columnsCount {
	.col__#{$column} {
		columns: $column;
	}
}

//breaks 

$list__breaks-in-out: (auto, avoid, all, avoid-page, page, left, right, recto, verso);

@each $break in $list__breaks-in-out {
	.break__inside-#{$break} {
		break-inside: $break;
	}
	.break__outside-#{$break} {
		break-outside: $break;
	}
}

$list__breaks-inside: (auto, avoid, avoid-page, avoid-column);

@each $break in $list__breaks-inside {
	.break__inside-#{$break} {
		break-inside: $break;
	}
}

$list__break-box-decoration: (slice, clone);

@each $break in $list__break-box-decoration {
	.break__box-decoration-#{$break} {
		box-decoration-break: $break;
	}
}


//box model
$list__box-sizing: (border-box, content-box);

@each $box in $list__box-sizing {
	.box__#{$box} {
		box-sizing: $box;
	}
}

//display

$list__display: (block, inline, inline-block, flex, grid, inline-flex, inline-grid, none, table, table-row, table-cell, table-column, table-column-group, table-footer-group, table-header-group, table-row-group, flow-root, contents, list-item, ruby, ruby-base, ruby-text, run-in, subgrid);

@each $display in $list__display {
	.display__#{$display} {
		display: $display;
	}
}

//floats

$list__floats: (inline-start, inline-end, left, right, none);

@each $float in $list__floats {
	.float__#{$float} {
		float: $float;
	}
}

//clear

$list__clear: (inline-start, inline-end, left, right, both, none);

@each $clear in $list__clear {
	.clear__#{$clear} {
		clear: $clear;
	}
}

//isolation

$list__isolation: (auto, isolate);

@each $isolation in $list__isolation {
	.isolation__#{$isolation} {
		isolation: $isolation;
	}
}

//object fit

$list__object-fit: (fill, contain, cover, none, scale-down);

@each $fit in $list__object-fit {
	.fit__#{$fit} {
		object-fit: $fit;
	}
}


//object position

$list__object-possition: (top, bottom, left, right, center, top left, top right, bottom left, bottom right);

@each $position in $list__object-possition {
	.position__#{$position} {
		object-position: $position;
	}
}

//overflow

$list__overflow: (visible, hidden, scroll, auto);

@each $overflow in $list__overflow {
	.overflow__#{$overflow} {
		overflow: $overflow;
	}
	.overflow__x-#{$overflow} {
		overflow-x: $overflow;
	}	
	.overflow__y-#{$overflow} {
		overflow-y: $overflow;
	}
}

//overscroll behavior -- not supported in safari

$list__overscroll: (auto, contain, none);

@each $overscroll in $list__overscroll {
	.overscroll__#{$overscroll} {
		overscroll-behavior: $overscroll;
	}
	.overscroll__x-#{$overscroll} {
		overscroll-behavior-x: $overscroll;
	}
	.overscroll__y-#{$overscroll} {
		overscroll-behavior-y: $overscroll;
	}

}

//position

$list__position: (static, relative, absolute, fixed, sticky);

@each $position in $list__position {
	.position__#{$position} {
		position: $position;
	}
}

//top right bottom left

$list__top-right-bottom-left: (auto, 0);

@each $value in $list__top-right-bottom-left {
	.possition__top-#{$value} {
		top: $value;
	}
	.possition__right-#{$value} {
		right: $value;
	}
	.possition__bottom-#{$value} {
		bottom: $value;
	}
	.possition__left-#{$value} {
		left: $value;
	}
}

//visibility

$list__visibility: (visible, hidden, collapse);

@each $visibility in $list__visibility {
	.visibility__#{$visibility} {
		visibility: $visibility;
	}
}

//z-index

$list__z-index: (auto, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000);

@each $index in $list__z-index {
	.index__#{$index} {
	  z-index: $index;
	}
  }



  /* flexbox & Grid */

//Flex Basis 


//flex direction

$list__flex-direction: (row, row-reverse, column, column-reverse);

@each $direction in $list__flex-direction {
	.flex__direction-#{$direction} {
		flex-direction: $direction;
	}
}

//flex wrap

$list__flex-wrap: (nowrap, wrap, wrap-reverse);

@each $wrap in $list__flex-wrap {
	.flex__wrap-#{$wrap} {
		flex-wrap: $wrap;
	}
}

//flex grow

$list__flex-grow: (0, 1);

@each $grow in $list__flex-grow {
	.flex__grow-#{$grow} {
		flex-grow: $grow;
	}
}

//flex shrink

$list__flex-shrink: (0, 1);

@each $shrink in $list__flex-shrink {
	.flex__shrink-#{$shrink} {
		flex-shrink: $shrink;
	}
}

//flex

$list__flex: (0, 1, auto);

@each $flex in $list__flex {
	.flex__#{$flex} {
		flex: $flex;
	}
}


//grid columns

$list__grid-columns: (auto, 1fr, 2fr, 3fr, 4fr, 5fr, 6fr, 7fr, 8fr, 9fr, 10fr, 11fr, 12fr, 13fr, 14fr, 15fr, 16fr, 17fr, 18fr, 19fr, 20fr, 21fr, 22fr, 23fr, 24fr);

@each $column in $list__grid-columns {
	.grid__column-#{$column} {
		grid-template-columns: repeat(auto-fill, minmax($column, 1fr));
	}
}

//grid auto flow

$list__grid-auto-flow: (row, column, row dense, column dense);

@each $flow in $list__grid-auto-flow {
	.grid__auto-flow-#{$flow} {
		grid-auto-flow: $flow;
	}
}

//grid auto columns

$list__grid-auto-columns: (auto, 1fr, 2fr, 3fr, 4fr, 5fr, 6fr, 7fr, 8fr, 9fr, 10fr, 11fr, 12fr, 13fr, 14fr, 15fr, 16fr, 17fr, 18fr, 19fr, 20fr, 21fr, 22fr, 23fr, 24fr);

@each $column in $list__grid-auto-columns {
	.grid__auto-column-#{$column} {
		grid-auto-columns: repeat(auto-fill, minmax($column, 1fr));
	}
}

//grid auto rows

$list__grid-auto-rows: (auto, 1fr, 2fr, 3fr, 4fr, 5fr, 6fr, 7fr, 8fr, 9fr, 10fr, 11fr, 12fr, 13fr, 14fr, 15fr, 16fr, 17fr, 18fr, 19fr, 20fr, 21fr, 22fr, 23fr, 24fr);

@each $row in $list__grid-auto-rows {
	.grid__auto-row-#{$row} {
		grid-auto-rows: repeat(auto-fill, minmax($row, 1fr));
	}
}


//grid rows

$list__grid-rows: (auto, 1fr, 2fr, 3fr, 4fr, 5fr, 6fr, 7fr, 8fr, 9fr, 10fr, 11fr, 12fr, 13fr, 14fr, 15fr, 16fr, 17fr, 18fr, 19fr, 20fr, 21fr, 22fr, 23fr, 24fr);

@each $row in $list__grid-rows {
	.grid__row-#{$row} {
		grid-template-rows: repeat(auto-fill, minmax($row, 1fr));
	}
}

//justify-content

$list__justify-content: (flex-start, flex-end, center, space-between, space-around, space-evenly, start, end, left, right);

@each $justify in $list__justify-content {
	.justify__#{$justify} {
		justify-content: $justify;
	}
}

//justify items

$list__justify-items: (start, end, center, stretch);

@each $justify in $list__justify-items {
	.justify__items-#{$justify} {
		justify-items: $justify;
	}
}

//justify self

$list__justify-self: (auto, start, end, center, stretch);

@each $justify in $list__justify-self {
	.justify__self-#{$justify} {
		justify-self: $justify;
	}
}

//align-content

$list__align-content: (flex-start, flex-end, center, space-between, space-around, space-evenly, stretch, start, end);

@each $align in $list__align-content {
	.align__content-#{$align} {
		align-content: $align;
	}
}

//align items

$list__align-items: (stretch, flex-start, flex-end, center, baseline);

@each $align in $list__align-items {
	.align__items-#{$align} {
		align-items: $align;
	}
}

//align self

$list__align-self: (auto, stretch, flex-start, flex-end, center, baseline);

@each $align in $list__align-self {
	.align__self-#{$align} {
		align-self: $align;
	}
}

//place content

$list__place-content: (stretch, center, start, end, flex-start, flex-end, space-between, space-around, space-evenly);

@each $place in $list__place-content {
	.place__content-#{$place} {
		place-content: $place;
	}
}

//place items

$list__place-items: (stretch, center, start, end, flex-start, flex-end, baseline);

@each $place in $list__place-items {
	.place__items-#{$place} {
		place-items: $place;
	}
}

//place self

$list__place-self: (auto, stretch, center, start, end, flex-start, flex-end, baseline);

@each $place in $list__place-self {
	.place__self-#{$place} {
		place-self: $place;
	}
}

//font smoothing 

$list__font-smoothing: (auto, none, antialiased, subpixel-antialiased);

@each $smoothing in $list__font-smoothing {
	.font__smoothing-#{$smoothing} {
		-webkit-font-smoothing: $smoothing;
		-moz-osx-font-smoothing: $smoothing;
	}
}

//font style

$list__font-style: (normal, italic, oblique);

@each $style in $list__font-style {
	.font__style-#{$style} {
		font-style: $style;
	}
}

//font weight

$list__font-weight: (normal, bold, bolder, lighter, 100, 200, 300, 400, 500, 600, 700, 800, 900);

@each $weight in $list__font-weight {
	.font__weight-#{$weight} {
		font-weight: $weight;
	}
}

//list style

$list__list-style: (none, disc, circle, square, decimal, decimal-leading-zero, lower-roman, upper-roman, lower-greek, lower-latin, upper-latin, armenian, georgian, lower-alpha, upper-alpha, none);

@each $style in $list__list-style {
	.list__style-#{$style} {
		list-style: $style;
	}
}


//list style position

$list__list-style-position: (inside, outside);

@each $position in $list__list-style-position {
	.list__style-position-#{$position} {
		list-style-position: $position;
	}
}

//list style type

$list__list-style-type: (none, disc, circle, square, decimal, decimal-leading-zero, lower-roman, upper-roman, lower-greek, lower-latin, upper-latin, armenian, georgian, lower-alpha, upper-alpha, none);

@each $type in $list__list-style-type {
	.list__style-type-#{$type} {
		list-style-type: $type;
	}
}

//text align

$list__text-align: (left, right, center, justify, start, end, match-parent);

@each $align in $list__text-align {
	.align__#{$align} {
		text-align: $align;
	}
}

//text decoration

$list__text-decoration: (none, underline, overline, line-through, blink);	

@each $decoration in $list__text-decoration {
	.decoration__#{$decoration} {
		text-decoration: $decoration;
	}
}

//text decoration

$list__text-decoration: (none, underline, overline, line-through, blink);

@each $decoration in $list__text-decoration {
	.decoration__#{$decoration} {
		text-decoration: $decoration;
	}
}

//text decoration thickness

$list__text-decoration-thickness: (auto, from-font, 0, 1px, 2px, 3px, 4px, 5px);

@each $thickness in $list__text-decoration-thickness {
	.thickness__#{$thickness} {
		text-decoration-thickness: $thickness;
	}
}

//text decoration style

$list__text-decoration-style: (solid, double, dotted, dashed, wavy);

@each $style in $list__text-decoration-style {
	.style__#{$style} {
		text-decoration-style: $style;
	}
}

//text Underline offset

$list__text-underline-offset: (auto, from-font, 0, 1px, 2px, 3px, 4px, 5px);

@each $offset in $list__text-underline-offset {
	.offset__#{$offset} {
		text-underline-offset: $offset;
	}
}

//text transform

$list__text-transform: (none, capitalize, uppercase, lowercase);

@each $transform in $list__text-transform {
	.transform__#{$transform} {
		text-transform: $transform;
	}
}

//text overflow

$list__text-overflow: (clip, ellipsis);

@each $overflow in $list__text-overflow {
	.overflow__#{$overflow} {
		text-overflow: $overflow;
	}
}

//
